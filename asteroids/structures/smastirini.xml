<?xml version="1.0" encoding="utf-8" ?>
<data>
  <!-- SUBVERSION 2.0.0 -->
  <quest id="find_smastirini" exp="50">
    <area id="smastirini_interior" count="1" />
  </quest>

  <!-- The Research Vessel Smastirini -->
  <tilesheet id="smastirini_crack.png" width="86" height="60" />
  <tile id="smastirini_crack" sheet="smastirini_crack.png" x="0" y="0" />
  <structure id="smastirini_crack" tile="smastirini_crack" name="enter" type="door"/>
  <animation id="smastirini_logs.idle" equals="medicom.idle" />
  <structure id="smastirini_logs" extends="medicom">
      <operate>
        <section if="player.questComplete('find_smastirini')">
          <dialogue section="awreck_logs" id="awreck_read" speaker="player" />
        </section>
        <section if="!player.questComplete('find_smastirini')">
          <dialogue section="awreck_logs" id="smastirini5" />
          <dialogue section="awreck_logs" id="smastirini6" />
          <dialogue section="awreck_logs" id="smastirini7" />
          <dialogue section="awreck_logs" id="smastirini8" />
          <dialogue section="awreck_logs" id="smastirini9" />
          <dialogue section="awreck_logs" id="smastirini10" />
          <dialogue section="awreck_logs" id="smastirini11" />
          <complete quest="find_smastirini"/>
          <dialogue section="awreck_logs" id="ambush1" speaker="player" />
          <dialogue section="awreck_logs" id="ambush2" speaker="player" />
          <action>
            spawnPatternObject(player.areas.get('smastirini.orbit'), "asteroid_miner_drone", 15, 3, 0.2, 32, 16);
            spawnPatternObject(player.areas.get('smastirini.orbit'), "asteroid_miner_drone", 15, 3, 0.2, 75, 50);
            spawnPatternObject(player.areas.get('smastirini.orbit'), "asteroid_miner_drone", 15, 3, 0.2, 175, 40);
            spawnPatternObject(player.areas.get('smastirini.orbit'), "asteroid_miner_drone", 15, 3, 0.4, 111, 28);
          </action>
        </section>
      </operate>
  </structure>
  <animation id="utility_droid_logs.idle" equals="medicom.idle" />
  <structure id="utility_droid_logs" extends="medicom">
      <operate>
          <dialogue section="awreck_logs" id="give_utility_droid" speaker="player" />
          <action>setFlag('make_utility_droid', true)</action>
      </operate>
  </structure>
  <planet id="smastirini" height="80">
    <orbit id="smastirini.orbit" width="256" height="64" background="stars.asteroids.orbit">
      <init><runAreaLoad /><action>
        spawnPatternObjects(area, [ { object: "ass_debris1", p: 1 }, { object: "ass_debris2", p: 2 }, {object: "ass_debris3", p: 2},{ object: "ass_debris4", p: 2 }, { object: "ass_debris5", p: 2 }, {object: "ass_debris6", p: 2},{object: "ass_debris7", p: 2}], 25, 1.5, 0.3, 115, 30);
        area.addStructure(getSmastiriniDoor(111,28));
      </action></init>
      <onLoad><music id="asteroids" seconds="1" /><radar tile="orbit.radar" animation="orbit.radar" padding="2" /></onLoad>
      <structure id="crashed_ship" x="100" y="40"/>
      <structure id="loot_destroyed_fighter" x="32" y="16"/>
      <structure id="loot_destroyed_fighter" x="75" y="50"/>
      <structure id="loot_destroyed_fighter" x="175" y="40"/>
    </orbit>
    <!-- <onLeave><action>player.areas.remove('smastirini.orbit')</action></onLeave> -->
  </planet>

  <area id="smastirini_interior" name="smastirini" width="32" height="25" hasO2="false" background="destroyed_fighter_interior">
    <tiles id="desert.scorched" start="0" end="1" /><mine start="0" end="1" /><tiles id="empty" start="0" end="1" />
    <init><runAreaLoad /></init><onLoad><music id="oscillation" seconds="1" /></onLoad>
    <action>
      for(x in 20...24) mine(x, 10); mine(23,12); for(y in 12...14) for(x in 17...23) mine(x, y);
      mine(16, 13); for(x in 16...22) mine(x, 14); for(x in 16...22) mine(x, 15); for(x in 17...21) mine(x, 16);
    </action>
    <structure id="science1.bridge" x="10" y="18" />
    <structure id="smastirini_crack" x="17" y="16" />
    <structure id="smastirini_logs" x="16" y="14" />
    <structure id="utility_droid_logs" x="17" y="12" />
    <object id="ship_chest" x="23" y="12">
          var p = Std.random(100);
          if (p > 96) {
            this.inventory.addItems(Item.get("power_core"), 1);
            this.inventory.addItems(Item.get("exotic_matter"), 1);
            this.inventory.addItems(Item.get("ship_parts"), 5);
            this.inventory.addItems(Item.get("titanium"), 20);
          } if (p > 90) {
            this.inventory.addItems(Item.get("exotic_matter"), 1);
            this.inventory.addItems(Item.get("ship_parts"), 5);
            this.inventory.addItems(Item.get("titanium"), 20);
          } else if (p > 80) {
            this.inventory.addItems(Item.get("ship_parts"), 5);
            this.inventory.addItems(Item.get("titanium"), 20);
          } else if (p > 70) {
            this.inventory.addItems(Item.get("ship_parts"), 5);
            this.inventory.addItems(Item.get("titanium"), 15);
          } else if (p > 60) {
            this.inventory.addItems(Item.get("titanium"), 10);
            this.inventory.addItems(Item.get("steel_bar"), 15);
          } else {
            this.inventory.addItems(Item.get("titanium"), 5);
            this.inventory.addItems(Item.get("steel_bar"), 10);
          }
    </object>
  </area>

  <!-- The fighter escort Smastirini-12 -->
  <structure id="destroyed_fighter" width="174" height="110" image="destroyed_fighter.png" priority="-2" behind="true" remove="false" />
  <structure id="destroyed_fighter_interior" extends="destroyed_fighter" image="destroyed_fighter_interior.png"/>
  <structure id="loot_destroyed_fighter" extends="destroyed_fighter" name="search">
      <operate>
        <object id="jumpship" x="player.tile_x" y="player.tile_y" />
        <dialogue section="awreck_logs" id="loot_jumpship" speaker="player"/>
        <action>
            replaceStructure(this,'destroyed_fighter',player.area);
        </action>
      </operate>
  </structure>

  <tilesheet id="fighter_crack.png" width="30" height="33" />
  <tile id="fighter_crack" sheet="fighter_crack.png" x="0" y="0" />
  <structure id="fighter_crack" tile="fighter_crack" name="enter" type="door"/>
  <animation id="asteroid_logs.idle" equals="medicom.idle" />
  <structure id="asteroid_logs" extends="medicom">
      <operate>
        <section if="player.hasQuest('find_smastirini')">
          <dialogue section="awreck_logs" id="awreck_read" speaker="player" />
        </section>
        <section if="!player.hasQuest('find_smastirini')">
          <dialogue section="awreck_logs" id="awreck_log1" />
          <dialogue section="awreck_logs" id="awreck_log2" />
          <dialogue section="awreck_logs" id="awreck_log3" />
          <dialogue section="awreck_logs" id="smastirini1" speaker="player" />
          <dialogue section="awreck_logs" id="smastirini2" speaker="player" />
          <dialogue section="awreck_logs" id="smastirini3" speaker="player" />
          <quest id="find_smastirini"/>
          <action>
              setFlag('smastirini_spawn', true);
              movePlanetFromStorage('smastirini', 'start');
          </action>
        </section>
      </operate>
  </structure>

  <parallax id="destroyed_fighter_interior" mapBG="0" skyColor="0">
    <layer p="0" glow="true" max_depth="10000"><tile sheet="{mod:full_version}/space/night_bg.png" x="0" y="0" /></layer>
  </parallax>

  <area id="destroyed_fighter.interior" width="32" height="32" hasO2="false" background="destroyed_fighter_interior">
    <tiles id="empty" start="0" end="1" /><init><runAreaLoad /></init><onLoad><music id="oscillation" seconds="1" /></onLoad>
    <action>
      for(x in 11...16){
        mine(x,9);
      }
      mine(15,8);
      for(x in 13...16){
        mine(x,7);
      }
    </action>
    <structure id="destroyed_fighter_interior" x="8" y="11.7" />
    <structure id="asteroid_logs" x="13.5" y="7"/>
    <structure id="fighter_crack" x="12.5" y="9.5" />
    <object id="ship_chest" x="11" y="9">
      var p = Std.random(100);
      if (p > 97) {
        this.inventory.addItems(Item.get("power_core"), 1);
        this.inventory.addItems(Item.get("exotic_matter"), 1);
        this.inventory.addItems(Item.get("ship_parts"), 5);
        this.inventory.addItems(Item.get("titanium"), 20);
      } else if (p > 90) {
        this.inventory.addItems(Item.get("exotic_matter"), 1);
        this.inventory.addItems(Item.get("ship_parts"), 5);
        this.inventory.addItems(Item.get("titanium"), 20);
      } else if (p > 80) {
        this.inventory.addItems(Item.get("ship_parts"), 5);
        this.inventory.addItems(Item.get("titanium"), 20);
      } else if (p > 60) {
        this.inventory.addItems(Item.get("ship_parts"), 5);
        this.inventory.addItems(Item.get("titanium"), 15);
      } else if (p > 50) {
        this.inventory.addItems(Item.get("titanium"), 10);
        this.inventory.addItems(Item.get("steel_bar"), 15);
      } else {
        this.inventory.addItems(Item.get("titanium"), 5);
        this.inventory.addItems(Item.get("steel_bar"), 10);
      }
    </object>
  </area>
    <!-- This belongs here to properly generate the right door. -->
    <action>
      function getFighterDoor(wx, wy) {
        var crack = getStructure("fighter_crack").create((wx + 4.5) * Tile.SIZE,(wy - 2.2) * Tile.SIZE);
        crack.area_id = "destroyed_fighter.interior";
        crack.x = 12.5 * Tile.SIZE;
        crack.y = 9.5 * Tile.SIZE;
        crack.allowReturn = true;
        return crack;
      }
      function getSmastiriniDoor(wx, wy) {
        var crack = getStructure("smastirini_crack").create((wx) * Tile.SIZE,(wy) * Tile.SIZE);
        crack.area_id = "smastirini_interior";
        crack.x = 18 * Tile.SIZE;
        crack.y = 15 * Tile.SIZE;
        crack.allowReturn = true;
        return crack;
      }
      function spawnDrone(area,x,y){
          trace('drone at: '+x+' '+y);
          area.addObject(getObject("asteroid_miner_drone").create((x) * Tile.SIZE,(y) * Tile.SIZE));
        }
        function spawnAmbush(area,xStart,yStart){
          for(num in 0...10){
            for(x in xStart-5...xStart+5){
              for(y in yStart-10...yStart+10){
                if(Std.random(100)==0){
                  spawnDrone(area,x,y);
                }
              }
            }
          }
        }
    </action>
</data>
